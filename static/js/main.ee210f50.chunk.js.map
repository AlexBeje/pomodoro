{"version":3,"sources":["components/countdown/countdown.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["countdown","myInterval","seconds","minutes","addTime","subsctractTime","startPressed","startTimer","stopTimer","resetTimer","className","onClick","disabled","href","App","useState","dynamicSeconds","setDynamicSeconds","dynamicMinutes","setDynamicMinutes","setStartPressed","intervalHandler","window","setInterval","setTimeout","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAmGeA,IC7FXC,ED6FWD,EAlFf,YASkC,IARhCE,EAQ+B,EAR/BA,QACAC,EAO+B,EAP/BA,QACAC,EAM+B,EAN/BA,QACAC,EAK+B,EAL/BA,eACAC,EAI+B,EAJ/BA,aACAC,EAG+B,EAH/BA,WACAC,EAE+B,EAF/BA,UACAC,EAC+B,EAD/BA,WAEA,OACE,sBAAKC,UAAU,4DAAf,UACE,mBAAGA,UAAU,uFAAb,0BAGA,qBAAKA,UAAU,0FAAf,SACE,mBAAGA,UAAU,4DAAb,wBAIF,sBAAKA,UAAU,oEAAf,UACE,wBACEA,UAAU,yFACVC,QAASN,EACTO,SAAUN,EAHZ,eAOA,qBAAKI,UAAU,8DAAf,SACE,sBAAKA,UAAU,+EAAf,UACGP,EAAU,GAAK,IAAMA,EAAUA,EADlC,KAC6C,IAC1CD,EAAU,GAAK,IAAMA,EAAUA,OAGpC,wBACEQ,UAAU,yFACVC,QAASP,EACTQ,SAAUN,EAHZ,kBAQF,wBACEI,UAAU,uEACVC,QAASJ,EAFX,SAIE,mBAAGG,UAAU,6CAAb,qBAEF,sBAAKA,UAAU,oEAAf,UACE,wBACEA,UAAU,kHACVC,QAASH,EAFX,kBAMA,wBACEE,UAAU,0GACVC,QAASF,EAFX,wBAOF,sBAAKC,UAAU,mDAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,mBAAGG,KAAK,uCAAR,SACE,cAAC,IAAD,CAAcH,UAAU,8BAE1B,mBAAGG,KAAK,8IAAR,SACE,cAAC,IAAD,CAASH,UAAU,4BAGvB,mBAAGG,KAAK,+BAAR,SACE,sBAAKH,UAAU,uCAAf,UACE,cAAC,IAAD,IADF,iCCrFNR,EAAU,EACVC,EAAU,EAsFCW,MAnFf,WAAgB,IAAD,EAC+BC,mBAAS,GADxC,mBACNC,EADM,KACUC,EADV,OAE+BF,mBAAS,GAFxC,mBAENG,EAFM,KAEUC,EAFV,OAG2BJ,oBAAS,GAHpC,mBAGNT,EAHM,KAGQc,EAHR,KAiBPC,EAAkB,WACtBpB,EAAaqB,OAAOC,aAAY,WAE9BN,EADAf,GAAoB,GAEJ,IAAZA,GAA6B,IAAZC,IACnBD,EAAU,GACVsB,YAAW,WACO,IAAZrB,IACFA,GAAoB,GAEtBgB,EAAkBhB,KACjB,QAEJ,MAqCL,OAlBgB,IAAZD,GAA6B,IAAZC,GACnBsB,cAAcxB,GAkBd,qBAAKS,UAAU,gBAAf,SACE,cAAC,EAAD,CACER,QAASc,EACTb,QAASe,EACTd,QAnEiB,WAErBe,EADAhB,GAAoB,IAmEhBE,eA/DwB,WACZ,IAAZF,GAAiBA,GAAW,GAE9BgB,EADAhB,GAAoB,IA8DlBI,WAzCoB,YACP,IAAZJ,IAAkBG,GAA8B,IAAZJ,IAAkBI,KACzDc,GAAiBd,GACD,IAAZH,GAA6B,IAAZD,GACnBA,EAAU,GACVmB,IACAG,YAAW,WAETL,EADAhB,GAAoB,KAEnB,MAEHkB,MA+BAf,aAAcA,EACdE,UAvBmB,WACvBY,GAAgB,GAChBK,cAAcxB,IAsBVQ,WAnBoB,WACxBW,GAAgB,GAChBK,cAAcxB,GAEdE,EAAU,EACVc,EAFAf,EAAU,GAGViB,EAAkBhB,SC1DPuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee210f50.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\n\n// Icons\nimport { AiFillGithub, AiOutlineCopyrightCircle } from \"react-icons/ai\";\nimport { FiFigma } from \"react-icons/fi\";\n\ntype CountdownProps = {\n  seconds: number;\n  minutes: number;\n  startPressed: boolean;\n  addTime: () => void;\n  subsctractTime: () => void;\n  startTimer: () => void;\n  stopTimer: () => void;\n  resetTimer: () => void;\n};\n\nfunction countdown({\n  seconds,\n  minutes,\n  addTime,\n  subsctractTime,\n  startPressed,\n  startTimer,\n  stopTimer,\n  resetTimer,\n}: CountdownProps): ReactElement {\n  return (\n    <div className=\"flex flex-col h-screen w-full md:m-auto md-h-600 md-w-600\">\n      <p className=\"text-center text-megrim text-unselectable m-auto hidden md:block md:text-5xl md:mb-4\">\n        POMODORO APP\n      </p>\n      <div className=\"flex bg-secondary text-primary md:hidden h-15-per land-h-30-per border-solid border-b-2\">\n        <p className=\"text-center text-megrim text-4xl text-unselectable m-auto\">\n          POMODORO\n        </p>\n      </div>\n      <div className=\"flex bg-secondary text-primary h-15-per land-h-30-per md-h-20-per\">\n        <button\n          className=\"bg-secondary-hover text-center text-audiowide text-3xl md:text-5xl m-auto w-1/3 h-full\"\n          onClick={subsctractTime}\n          disabled={startPressed}\n        >\n          -\n        </button>\n        <div className=\"border-solid border-l-2 border-r-2 m-auto w-1/3 h-full flex\">\n          <div className=\"text-center text-audiowide text-sm text-unselectable md:text-3xl pt-1 m-auto\">\n            {minutes < 10 ? \"0\" + minutes : minutes} :{\" \"}\n            {seconds < 10 ? \"0\" + seconds : seconds}\n          </div>\n        </div>\n        <button\n          className=\"bg-secondary-hover text-audiowide text-3xl md:text-5xl text-center m-auto w-1/3 h-full\"\n          onClick={addTime}\n          disabled={startPressed}\n        >\n          +\n        </button>\n      </div>\n      <button\n        className=\"flex bg-adjcent bg-adjcent-hover text-secondary h-55-per md-h-60-per\"\n        onClick={startTimer}\n      >\n        <p className=\"m-auto text-5xl md:text-6xl text-audiowide\">START</p>\n      </button>\n      <div className=\"flex bg-secondary text-primary h-15-per land-h-30-per md-h-20-per\">\n        <button\n          className=\"bg-secondary-hover text-center text-audiowide text-xl md:text-2xl w-1/2 md:w-1/2 h-full border-solid border-r-2\"\n          onClick={stopTimer}\n        >\n          STOP\n        </button>\n        <button\n          className=\"bg-secondary-hover text-center text-audiowide text-xl md:text-2xl w-1/2 md:w-1/2 h-full md:border-solid\"\n          onClick={resetTimer}\n        >\n          RESTART\n        </button>\n      </div>\n      <div className=\"justify-between mt-2 items-center hidden md:flex\">\n        <div className=\"flex items-center\">\n          <a href=\"https://github.com/AlexBeje/pomodoro\">\n            <AiFillGithub className=\"mr-5 text-adjcent-hover\" />\n          </a>\n          <a href=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FiBZQyAA5v9EZBGiQk7zhRI%2Fpomodoro%3Fnode-id%3D0%253A1\">\n            <FiFigma className=\"text-adjcent-hover\" />\n          </a>\n        </div>\n        <a href=\"https://www.alexbejenaru.dev\">\n          <div className=\"flex items-center text-adjcent-hover\">\n            <AiOutlineCopyrightCircle />\n            Alexandru Bejenaru\n          </div>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default countdown;\n","import React, { useState } from \"react\";\n\nimport Countdown from \"./components/countdown/countdown.component\";\n\nlet seconds = 0;\nlet minutes = 0;\nlet myInterval: number;\n\nfunction App() {\n  const [dynamicSeconds, setDynamicSeconds] = useState(0);\n  const [dynamicMinutes, setDynamicMinutes] = useState(0);\n  const [startPressed, setStartPressed] = useState(false);\n\n  const addTimeHandler = () => {\n    minutes = minutes + 5;\n    setDynamicMinutes(minutes);\n  };\n\n  const subsctractTimeHandler = () => {\n    if (minutes !== 0 && minutes >= 5) {\n      minutes = minutes - 5;\n      setDynamicMinutes(minutes);\n    }\n  };\n\n  const intervalHandler = () => {\n    myInterval = window.setInterval(() => {\n      seconds = seconds - 1;\n      setDynamicSeconds(seconds);\n      if (seconds === 0 && minutes !== 0) {\n        seconds = 60;\n        setTimeout(() => {\n          if (minutes !== 0) {\n            minutes = minutes - 1;\n          }\n          setDynamicMinutes(minutes);\n        }, 1000);\n      }\n    }, 1000);\n  };\n\n  const startTimerHandler = () => {\n    if ((minutes !== 0 && !startPressed) || (seconds !== 0 && !startPressed)) {\n      setStartPressed(!startPressed);\n      if (minutes !== 0 && seconds === 0) {\n        seconds = 60;\n        intervalHandler();\n        setTimeout(() => {\n          minutes = minutes - 1;\n          setDynamicMinutes(minutes);\n        }, 1000);\n      } else {\n        intervalHandler();\n      }\n    }\n  };\n\n  if (seconds === 0 && minutes === 0) {\n    clearInterval(myInterval);\n  }\n\n  const stopTimerHandler = () => {\n    setStartPressed(false);\n    clearInterval(myInterval);\n  };\n\n  const resetTimerHandler = () => {\n    setStartPressed(false);\n    clearInterval(myInterval);\n    seconds = 0;\n    minutes = 0;\n    setDynamicSeconds(seconds);\n    setDynamicMinutes(minutes);\n  };\n\n  return (\n    <div className=\"flex h-screen\">\n      <Countdown\n        seconds={dynamicSeconds}\n        minutes={dynamicMinutes}\n        addTime={addTimeHandler}\n        subsctractTime={subsctractTimeHandler}\n        startTimer={startTimerHandler}\n        startPressed={startPressed}\n        stopTimer={stopTimerHandler}\n        resetTimer={resetTimerHandler}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.output.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}